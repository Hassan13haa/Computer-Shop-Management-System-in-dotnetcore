// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RenewApplication.Models;

#nullable disable

namespace RenewApplication.Migrations
{
    [DbContext(typeof(WebarenaContext))]
    [Migration("20250224075910_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RenewApplication.Models.Bill", b =>
                {
                    b.Property<int>("BillId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("bill_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BillId"));

                    b.Property<DateTime>("BDate")
                        .HasColumnType("datetime")
                        .HasColumnName("b_date");

                    b.Property<string>("CPhone")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("c_phone");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("customer_id");

                    b.Property<decimal?>("Discount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18, 2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("discount");

                    b.Property<decimal>("Due")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("due");

                    b.Property<decimal>("NetTotal")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("net_total");

                    b.Property<decimal>("Paid")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("paid");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("total");

                    b.HasKey("BillId")
                        .HasName("PK__bill__D706DDB308A693AB");

                    b.HasIndex("CustomerId");

                    b.ToTable("bill", (string)null);
                });

            modelBuilder.Entity("RenewApplication.Models.Bill1", b =>
                {
                    b.Property<DateOnly?>("BDate")
                        .HasColumnType("date")
                        .HasColumnName("b_date");

                    b.Property<int>("BillId")
                        .HasColumnType("int")
                        .HasColumnName("bill_id");

                    b.Property<string>("CustomerName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("customer_name");

                    b.Property<int?>("Discount")
                        .HasColumnType("int")
                        .HasColumnName("discount");

                    b.Property<int?>("Due")
                        .HasColumnType("int")
                        .HasColumnName("due");

                    b.Property<string>("ItemName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("item_name");

                    b.Property<int?>("NetTotal")
                        .HasColumnType("int")
                        .HasColumnName("net_total");

                    b.Property<int?>("Paid")
                        .HasColumnType("int")
                        .HasColumnName("paid");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.Property<int?>("SubTotal")
                        .HasColumnType("int")
                        .HasColumnName("sub_total");

                    b.Property<int?>("Total")
                        .HasColumnType("int")
                        .HasColumnName("total");

                    b.Property<int?>("UnitPrice")
                        .HasColumnType("int")
                        .HasColumnName("unit_price");

                    b.ToTable((string)null);

                    b.ToView("bills", (string)null);
                });

            modelBuilder.Entity("RenewApplication.Models.BillDet", b =>
                {
                    b.Property<int>("BdId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("bd_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BdId"));

                    b.Property<int>("BillId")
                        .HasColumnType("int")
                        .HasColumnName("bill_id");

                    b.Property<int>("IId")
                        .HasColumnType("int")
                        .HasColumnName("i_id");

                    b.Property<string>("IName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("i_name");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.Property<decimal>("SubTotal")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("sub_total");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("unit_price");

                    b.HasKey("BdId")
                        .HasName("PK__bill_det__EC38960AD103E02F");

                    b.HasIndex("BillId");

                    b.ToTable("bill_det", (string)null);
                });

            modelBuilder.Entity("RenewApplication.Models.BillsRep", b =>
                {
                    b.Property<DateOnly?>("BDate")
                        .HasColumnType("date")
                        .HasColumnName("b_date");

                    b.Property<int>("BillId")
                        .HasColumnType("int")
                        .HasColumnName("bill_id");

                    b.Property<string>("CustomerName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("customer_name");

                    b.Property<int?>("Discount")
                        .HasColumnType("int")
                        .HasColumnName("discount");

                    b.Property<int?>("Due")
                        .HasColumnType("int")
                        .HasColumnName("due");

                    b.Property<string>("ItemName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("item_name");

                    b.Property<int?>("NetTotal")
                        .HasColumnType("int")
                        .HasColumnName("net_total");

                    b.Property<int?>("Paid")
                        .HasColumnType("int")
                        .HasColumnName("paid");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.Property<int?>("SubTotal")
                        .HasColumnType("int")
                        .HasColumnName("sub_total");

                    b.Property<int?>("Total")
                        .HasColumnType("int")
                        .HasColumnName("total");

                    b.Property<int?>("UnitPrice")
                        .HasColumnType("int")
                        .HasColumnName("unit_price");

                    b.ToTable((string)null);

                    b.ToView("bills_rep", (string)null);
                });

            modelBuilder.Entity("RenewApplication.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("customer_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<string>("Addres")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("addres");

                    b.Property<int?>("BillId")
                        .HasColumnType("int")
                        .HasColumnName("bill_id");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("customer_name");

                    b.Property<string>("Email")
                        .HasMaxLength(320)
                        .IsUnicode(false)
                        .HasColumnType("varchar(320)")
                        .HasColumnName("email");

                    b.Property<string>("Phone")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("phone");

                    b.HasKey("CustomerId");

                    b.HasIndex("BillId");

                    b.ToTable("customers", (string)null);
                });

            modelBuilder.Entity("RenewApplication.Models.Item", b =>
                {
                    b.Property<int>("IId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("i_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IId"));

                    b.Property<string>("Gen")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("gen");

                    b.Property<string>("Harddisk")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("harddisk");

                    b.Property<string>("Itemname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("itemname");

                    b.Property<decimal>("Purchprice")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("purchprice");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.Property<string>("Ram")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("ram");

                    b.Property<decimal>("Sellprice")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("sellprice");

                    b.HasKey("IId");

                    b.ToTable("items", (string)null);
                });

            modelBuilder.Entity("RenewApplication.Models.Login", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("password");

                    b.Property<string>("Role")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("role");

                    b.HasKey("Id");

                    b.ToTable("logins", (string)null);
                });

            modelBuilder.Entity("RenewApplication.Models.Repair", b =>
                {
                    b.Property<int>("RepId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("rep_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RepId"));

                    b.Property<string>("CustName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("cust_name");

                    b.Property<string>("Descp")
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)")
                        .HasColumnName("descp");

                    b.Property<string>("Item")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("item");

                    b.Property<int?>("RepCost")
                        .HasColumnType("int")
                        .HasColumnName("rep_cost");

                    b.Property<DateOnly?>("RepDate")
                        .HasColumnType("date")
                        .HasColumnName("rep_date");

                    b.HasKey("RepId")
                        .HasName("PK__repair__DC905AF408636631");

                    b.ToTable("repair", (string)null);
                });

            modelBuilder.Entity("RenewApplication.Models.Bill", b =>
                {
                    b.HasOne("RenewApplication.Models.Customer", "Customer")
                        .WithMany("Bills")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Bill_Customer");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("RenewApplication.Models.BillDet", b =>
                {
                    b.HasOne("RenewApplication.Models.Bill", "Bill")
                        .WithMany("BillDets")
                        .HasForeignKey("BillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_bill_det_bill");

                    b.Navigation("Bill");
                });

            modelBuilder.Entity("RenewApplication.Models.Customer", b =>
                {
                    b.HasOne("RenewApplication.Models.Bill", "Bill")
                        .WithMany("Customers")
                        .HasForeignKey("BillId")
                        .HasConstraintName("fk_bill_id");

                    b.Navigation("Bill");
                });

            modelBuilder.Entity("RenewApplication.Models.Bill", b =>
                {
                    b.Navigation("BillDets");

                    b.Navigation("Customers");
                });

            modelBuilder.Entity("RenewApplication.Models.Customer", b =>
                {
                    b.Navigation("Bills");
                });
#pragma warning restore 612, 618
        }
    }
}
